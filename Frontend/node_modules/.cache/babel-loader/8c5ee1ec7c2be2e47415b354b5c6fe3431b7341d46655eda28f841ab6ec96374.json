{"ast":null,"code":"var _jsxFileName = \"D:\\\\BusManagement\\\\bus_management\\\\src\\\\components\\\\Main\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const options = [\"Option 1\", \"Option 2\", \"Option 3\"];\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [showOptions, setShowOptions] = useState(false);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n    setShowOptions(true);\n  };\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n    setInputValue(option);\n    setShowOptions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputValue,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: \"N\\u01A1i xu\\u1EA5t ph\\xE1t\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), showOptions && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"autocomplete-list\",\n              children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleOptionSelect(option),\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"fK7ozBilQkTeePrxJjuyf4N/Cn4=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Main","_s","options","selectedOption","setSelectedOption","inputValue","setInputValue","showOptions","setShowOptions","handleInputChange","event","target","value","handleOptionSelect","option","className","children","action","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","map","index","onClick","_c","$RefreshReg$"],"sources":["D:/BusManagement/bus_management/src/components/Main/Main.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './Main.css';\r\n\r\nconst Main = () => {\r\n    const options = [\"Option 1\", \"Option 2\", \"Option 3\"];\r\n\r\n    const [selectedOption, setSelectedOption] = useState(\"\");\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n        setShowOptions(true);\r\n    };\r\n\r\n    const handleOptionSelect = (option) => {\r\n        setSelectedOption(option);\r\n        setInputValue(option);\r\n        setShowOptions(false);\r\n    };\r\n\r\n    return (\r\n        <section className='Main'>\r\n            {/* ... (other code) */}\r\n            <div className=\"banner\">\r\n                <form action=\"#\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-data\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={inputValue}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                            <label htmlFor=\"\">Nơi xuất phát</label>\r\n                            {showOptions && (\r\n                                <ul className=\"autocomplete-list\">\r\n                                    {options.map((option, index) => (\r\n                                        <li\r\n                                            key={index}\r\n                                            onClick={() => handleOptionSelect(option)}\r\n                                        >\r\n                                            {option}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            )}\r\n                        </div>\r\n                        {/* ... (other input fields) */}\r\n                    </div>\r\n                </form>\r\n                {/* ... (button) */}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;EAEpD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMY,iBAAiB,GAAIC,KAAK,IAAK;IACjCJ,aAAa,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACjCJ,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMK,kBAAkB,GAAIC,MAAM,IAAK;IACnCV,iBAAiB,CAACU,MAAM,CAAC;IACzBR,aAAa,CAACQ,MAAM,CAAC;IACrBN,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACIT,OAAA;IAASgB,SAAS,EAAC,MAAM;IAAAC,QAAA,eAErBjB,OAAA;MAAKgB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACnBjB,OAAA;QAAMkB,MAAM,EAAC,GAAG;QAAAD,QAAA,eACZjB,OAAA;UAAKgB,SAAS,EAAC,UAAU;UAAAC,QAAA,eACrBjB,OAAA;YAAKgB,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBjB,OAAA;cACImB,IAAI,EAAC,MAAM;cACXN,KAAK,EAAEP,UAAW;cAClBc,QAAQ,EAAEV,iBAAkB;cAC5BW,QAAQ;YAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eACFzB,OAAA;cAAO0B,OAAO,EAAC,EAAE;cAAAT,QAAA,EAAC;YAAa;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EACtCjB,WAAW,iBACRR,OAAA;cAAIgB,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC5Bd,OAAO,CAACwB,GAAG,CAAC,CAACZ,MAAM,EAAEa,KAAK,kBACvB5B,OAAA;gBAEI6B,OAAO,EAAEA,CAAA,KAAMf,kBAAkB,CAACC,MAAM,CAAE;gBAAAE,QAAA,EAEzCF;cAAM,GAHFa,KAAK;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAIV,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CACP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAAAvB,EAAA,CApDKD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAsDV,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}