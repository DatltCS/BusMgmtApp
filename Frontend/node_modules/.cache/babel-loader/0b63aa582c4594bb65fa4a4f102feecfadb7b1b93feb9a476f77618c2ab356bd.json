{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project LTJAVA\\\\BusMgmtApp\\\\Frontend\\\\src\\\\components\\\\Main\\\\DropdownListStartPlace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, createContext } from 'react';\nimport './DropdownList.css';\nimport useLocalStorage from '../../context/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DropdownListStartPlace({\n  label,\n  options,\n  storageKey\n}) {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  // Separate local storage for selectedOption\n  const [selectedOptionValue, setSelectedOptionValue] = useState(getSavedValue(`${storageKey}-selectedOption`, ''));\n\n  // Separate local storage for value\n  const [value, setValue] = useState(getSavedValue(`${storageKey}-value`, ''));\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n    setSelectedOptionValue(option); // Save selectedOption to local storage\n    setValue(''); // Clear value when a new option is selected\n  };\n\n  let menuRef = useRef();\n  useEffect(() => {\n    let handler = e => {\n      if (!menuRef.current.contains(e.target)) {\n        setOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handler);\n    return () => {\n      document.removeEventListener('mousedown', handler);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-dropdown-container\",\n    ref: menuRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"start-place\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `custom-dropdown-toggle ${open ? 'active' : 'inactive'}`,\n        id: \"dropdown-basic\",\n        onClick: () => setOpen(!open),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: value,\n          onChange: event => {\n            const newValue = event.target.value;\n            handleOptionSelect(newValue);\n            setValue(newValue);\n          },\n          placeholder: label,\n          style: {\n            border: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-dropdown-menu\",\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-dropdown-item\",\n          onClick: () => {\n            handleOptionSelect(option);\n            setOpen(false);\n          },\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_s(DropdownListStartPlace, \"+XtmCe7R1GB/Cxp6t00zBRoNkPE=\");\n_c = DropdownListStartPlace;\nexport default DropdownListStartPlace;\nvar _c;\n$RefreshReg$(_c, \"DropdownListStartPlace\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createContext","useLocalStorage","jsxDEV","_jsxDEV","DropdownListStartPlace","label","options","storageKey","_s","open","setOpen","selectedOption","setSelectedOption","selectedOptionValue","setSelectedOptionValue","getSavedValue","value","setValue","handleOptionSelect","option","menuRef","handler","e","current","contains","target","document","addEventListener","removeEventListener","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","type","onChange","event","newValue","placeholder","style","border","map","index","_c","$RefreshReg$"],"sources":["D:/Project LTJAVA/BusMgmtApp/Frontend/src/components/Main/DropdownListStartPlace.js"],"sourcesContent":["import React, { useState, useEffect, useRef, createContext } from 'react';\r\nimport './DropdownList.css';\r\nimport useLocalStorage from '../../context/localStorage';\r\n\r\n\r\nfunction DropdownListStartPlace({ label, options, storageKey }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  // Separate local storage for selectedOption\r\n  const [selectedOptionValue, setSelectedOptionValue] = useState(\r\n    getSavedValue(`${storageKey}-selectedOption`, '')\r\n  );\r\n\r\n  // Separate local storage for value\r\n  const [value, setValue] = useState(\r\n    getSavedValue(`${storageKey}-value`, '')\r\n  );\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n    setSelectedOptionValue(option); // Save selectedOption to local storage\r\n    setValue(''); // Clear value when a new option is selected\r\n  };\r\n\r\n  let menuRef = useRef();\r\n\r\n  useEffect(() => {\r\n    let handler = (e) => {\r\n      if (!menuRef.current.contains(e.target)) {\r\n        setOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handler);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handler);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n  \r\n      <div className=\"custom-dropdown-container\" ref={menuRef}>\r\n        <div className=\"custom-dropdown\">\r\n          <label className=\"start-place\">{label}</label>\r\n          <div\r\n            className={`custom-dropdown-toggle ${open ? 'active' : 'inactive'}`}\r\n            id=\"dropdown-basic\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              value={value} \r\n              onChange={(event) => {\r\n                const newValue = event.target.value;\r\n                handleOptionSelect(newValue);\r\n                setValue(newValue);\r\n              }}\r\n              placeholder={label}\r\n              style={{ border: 'none' }}\r\n            />\r\n          </div>\r\n\r\n          {open && (\r\n            <div className=\"custom-dropdown-menu\">\r\n              {options.map((option, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"custom-dropdown-item\"\r\n                  onClick={() => {\r\n                    handleOptionSelect(option);\r\n                    setOpen(false);\r\n                  }}\r\n                >\r\n                  {option}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nexport default DropdownListStartPlace;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}