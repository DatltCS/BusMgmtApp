{"ast":null,"code":"/**\n * Function helps to find which highlightSearch is to call based on your data.\n *\n * @param  {HTMLElement} element - Specifies an li element.\n * @param  {string} query - Specifies the string to be highlighted.\n * @param  {boolean} ignoreCase - Specifies the ignoreCase option.\n * @param  {HightLightType} type - Specifies the type of highlight.\n * @returns {void}\n */\nexport function highlightSearch(element, query, ignoreCase, type) {\n  if (query === '') {\n    return;\n  } else {\n    var ignoreRegex = ignoreCase ? 'gim' : 'gm';\n    // eslint-disable-next-line\n    query = /^[a-zA-Z0-9- ]*$/.test(query) ? query : query.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    var replaceQuery = type === 'StartsWith' ? '^(' + query + ')' : type === 'EndsWith' ? '(' + query + ')$' : '(' + query + ')';\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    findTextNode(element, new RegExp(replaceQuery, ignoreRegex));\n  }\n}\n/* eslint-enable jsdoc/require-param, valid-jsdoc */\n/**\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {RegExp} pattern - Specifies the regex to match the searched text.\n * @returns {void}\n */\nfunction findTextNode(element, pattern) {\n  for (var index = 0; element.childNodes && index < element.childNodes.length; index++) {\n    if (element.childNodes[index].nodeType === 3 && element.childNodes[index].textContent.trim() !== '') {\n      var value = element.childNodes[index].nodeValue.trim().replace(pattern, '<span class=\"e-highlight\">$1</span>');\n      element.childNodes[index].nodeValue = '';\n      element.innerHTML = element.innerHTML.trim() + value;\n      break;\n    } else {\n      findTextNode(element.childNodes[index], pattern);\n    }\n  }\n}\n/**\n * Function helps to remove highlighted element based on your data.\n *\n * @param  {HTMLElement} content - Specifies an content element.\n * @returns {void}\n */\nexport function revertHighlightSearch(content) {\n  var contentElement = content.querySelectorAll('.e-highlight');\n  for (var i = contentElement.length - 1; i >= 0; i--) {\n    var parent_1 = contentElement[i].parentNode;\n    var text = document.createTextNode(contentElement[i].textContent);\n    parent_1.replaceChild(text, contentElement[i]);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}