{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project LTJAVA\\\\BusMgmtApp\\\\Frontend\\\\src\\\\components\\\\Main\\\\DropdownListStartPlace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, createContext } from 'react';\nimport './DropdownList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StartPlace = /*#__PURE__*/createContext();\nfunction DropdownListStartPlace() {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const optionsStartPlace = ['Kiên Giang', 'An Giang', 'Đồng Tháp', 'Long Xuyên', 'Cần Thơ'];\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  let menuRef = useRef();\n  useEffect(() => {\n    let handler = e => {\n      if (!menuRef.current.contains(e.target)) {\n        setOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handler);\n    return () => {\n      document.removeEventListener('mousedown', handler);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StartPlace.Provider, {\n    value: selectedOption,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-dropdown-container\",\n      ref: menuRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"start-place\",\n          children: \"N\\u01A1i xu\\u1EA5t ph\\xE1t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `custom-dropdown-toggle ${open ? 'active' : 'inactive'}`,\n          id: \"dropdown-basic\",\n          onClick: () => setOpen(!open),\n          children: selectedOption || 'Nơi xuất phát'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-dropdown-menu\",\n          children: optionsStartPlace.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-item\",\n            onClick: () => {\n              handleOptionSelect(option);\n              setOpen(false);\n            },\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(DropdownListStartPlace, \"CksxNDW9e7kDAI0/KitAxe1wYk8=\");\n_c = DropdownListStartPlace;\nexport default DropdownListStartPlace;\nvar _c;\n$RefreshReg$(_c, \"DropdownListStartPlace\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createContext","jsxDEV","_jsxDEV","StartPlace","DropdownListStartPlace","_s","open","setOpen","selectedOption","setSelectedOption","optionsStartPlace","handleOptionSelect","option","menuRef","handler","e","current","contains","target","document","addEventListener","removeEventListener","Provider","value","children","className","ref","class","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","map","index","_c","$RefreshReg$"],"sources":["D:/Project LTJAVA/BusMgmtApp/Frontend/src/components/Main/DropdownListStartPlace.js"],"sourcesContent":["import React, { useState, useEffect, useRef, createContext } from 'react';\r\nimport './DropdownList.css';\r\n\r\nexport const StartPlace = createContext();\r\n\r\nfunction DropdownListStartPlace() {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const optionsStartPlace = ['Kiên Giang', 'An Giang', 'Đồng Tháp', 'Long Xuyên', 'Cần Thơ'];\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  let menuRef = useRef();\r\n\r\n  useEffect(() => {\r\n    let handler = (e) => {\r\n      if (!menuRef.current.contains(e.target)) {\r\n        setOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handler);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handler);\r\n    };\r\n  }, []);\r\n  return (\r\n    <StartPlace.Provider value={selectedOption}>\r\n    <div className=\"custom-dropdown-container\" ref={menuRef}>\r\n      <div className=\"custom-dropdown\">\r\n        <label class = \"start-place\">Nơi xuất phát</label>\r\n        <div\r\n          className={`custom-dropdown-toggle ${open ? 'active' : 'inactive'}`}\r\n          id=\"dropdown-basic\"\r\n          onClick={() => setOpen(!open)}\r\n        >\r\n          {selectedOption || 'Nơi xuất phát'}\r\n        </div>\r\n\r\n        {open && (\r\n          <div className=\"custom-dropdown-menu\">\r\n            {optionsStartPlace.map((option, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"custom-dropdown-item\"\r\n                onClick={() => {\r\n                  handleOptionSelect(option);\r\n                  setOpen(false);\r\n                }}\r\n              >\r\n                {option}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    </StartPlace.Provider>\r\n  );\r\n}\r\n\r\nexport default DropdownListStartPlace;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}