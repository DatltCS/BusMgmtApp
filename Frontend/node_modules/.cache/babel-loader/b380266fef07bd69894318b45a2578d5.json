{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { KeyboardEvents, compile, Property, EventHandler, Animation, formatUnit, append, attributes } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, detach, Event, Complex, addClass, removeClass, closest, isUndefined, getValue, NotifyPropertyChanges, Browser } from '@syncfusion/ej2-base';\nimport { FieldSettings } from '../drop-down-base/drop-down-base';\nimport { DropDownBase, dropDownBaseClasses } from '../drop-down-base/drop-down-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { Popup, isCollide, createSpinner, showSpinner, hideSpinner, getZindexPartial } from '@syncfusion/ej2-popups';\nimport { highlightSearch, revertHighlightSearch } from '../common/highlight-search';\n/**\n * The Mention component is used to list someone or something based on user input in textarea, input,\n * or any other editable element from which the user can select.\n */\nvar Mention = /** @class */function (_super) {\n  __extends(Mention, _super);\n  /**\n   * * Constructor for creating the widget\n   *\n   * @param {MentionModel} options - Specifies the MentionComponent model.\n   * @param {string | HTMLElement} element - Specifies the element to render as component.\n   * @private\n   */\n  function Mention(options, element) {\n    return _super.call(this, options, element) || this;\n  }\n  /**\n   * When property value changes happened, then onPropertyChanged method will execute the respective changes in this component.\n   *\n   * @param {MentionModel} newProp - Returns the dynamic property value of the component.\n   * @param {MentionModel} oldProp - Returns the previous property value of the component.\n   * @private\n   * @returns {void}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Mention.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'minLength':\n          this.minLength = newProp.minLength;\n          break;\n        case 'suffixText':\n          this.suffixText = newProp.suffixText;\n          break;\n        case 'allowSpaces':\n          this.allowSpaces = newProp.allowSpaces;\n          break;\n        case 'mentionChar':\n          this.mentionChar = newProp.mentionChar;\n          break;\n        case 'showMentionChar':\n          this.showMentionChar = newProp.showMentionChar;\n          break;\n        case 'cssClass':\n          this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n          break;\n      }\n    }\n  };\n  Mention.prototype.updateCssClass = function (newClass, oldClass) {\n    if (!isNullOrUndefined(oldClass)) {\n      oldClass = oldClass.replace(/\\s+/g, ' ').trim();\n    }\n    if (!isNullOrUndefined(newClass)) {\n      newClass = newClass.replace(/\\s+/g, ' ').trim();\n    }\n    this.setCssClass(newClass, [this.inputElement], oldClass);\n    if (this.popupObj) {\n      this.setCssClass(newClass, [this.popupObj.element], oldClass);\n    }\n  };\n  Mention.prototype.setCssClass = function (cssClass, elements, oldClass) {\n    if (!isNullOrUndefined(oldClass) && oldClass !== '') {\n      removeClass(elements, oldClass.split(' '));\n    }\n    if (!isNullOrUndefined(cssClass) && cssClass !== '') {\n      addClass(elements, cssClass.split(' '));\n    }\n  };\n  Mention.prototype.initializeData = function () {\n    this.isSelected = false;\n    this.isFiltered = false;\n    this.beforePopupOpen = false;\n    this.initRemoteRender = false;\n    this.isListResetted = false;\n    this.isPopupOpen = false;\n    this.isCollided = false;\n    this.lineBreak = false;\n    this.keyConfigure = {\n      tab: 'tab',\n      enter: '13',\n      escape: '27',\n      end: '35',\n      home: '36',\n      down: '40',\n      up: '38',\n      pageUp: '33',\n      pageDown: '34',\n      open: 'alt+40',\n      close: 'shift+tab',\n      hide: 'alt+38',\n      space: '32'\n    };\n  };\n  /**\n   * Execute before render the list items\n   *\n   * @private\n   * @returns {void}\n   */\n  Mention.prototype.preRender = function () {\n    this.initializeData();\n    _super.prototype.preRender.call(this);\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @private\n   * @returns {void}\n   */\n  Mention.prototype.render = function () {\n    var isSelector = typeof this.target === 'string';\n    this.inputElement = !isNullOrUndefined(this.target) ? this.checkAndUpdateInternalComponent(isSelector ? document.querySelector(this.target) : this.target) : this.element;\n    if (this.isContentEditable(this.inputElement)) {\n      this.inputElement.setAttribute('contenteditable', 'true');\n      addClass([this.inputElement], ['e-mention']);\n      if (isNullOrUndefined(this.target)) {\n        addClass([this.inputElement], ['e-editable-element']);\n      }\n    }\n    this.inputElement.setAttribute('role', 'textbox');\n    this.queryString = this.elementValue();\n    this.wireEvent();\n  };\n  Mention.prototype.wireEvent = function () {\n    EventHandler.add(this.inputElement, 'keyup', this.onKeyUp, this);\n    this.bindCommonEvent();\n  };\n  Mention.prototype.unWireEvent = function () {\n    EventHandler.remove(this.inputElement, 'keyup', this.onKeyUp);\n    this.unBindCommonEvent();\n  };\n  Mention.prototype.bindCommonEvent = function () {\n    if (!Browser.isDevice) {\n      this.keyboardModule = new KeyboardEvents(this.inputElement, {\n        keyAction: this.keyActionHandler.bind(this),\n        keyConfigs: this.keyConfigure,\n        eventName: 'keydown'\n      });\n    }\n  };\n  /**\n   * Hides the spinner loader.\n   *\n   * @private\n   * @returns {void}\n   */\n  Mention.prototype.hideSpinner = function () {\n    this.hideWaitingSpinner();\n  };\n  Mention.prototype.hideWaitingSpinner = function () {\n    if (!isNullOrUndefined(this.spinnerElement)) {\n      hideSpinner(this.spinnerElement);\n    }\n    if (!isNullOrUndefined(this.spinnerTemplate) && !isNullOrUndefined(this.spinnerTemplateElement)) {\n      detach(this.spinnerTemplateElement);\n    }\n  };\n  Mention.prototype.checkAndUpdateInternalComponent = function (targetElement) {\n    if (!this.isVue && targetElement.classList.contains('e-richtexteditor')) {\n      return targetElement.querySelector('.e-content');\n    }\n    if (this.isVue && targetElement.nodeName === 'TEXTAREA' && targetElement.classList.contains('e-rte-hidden')) {\n      var parentElement = targetElement.parentElement;\n      if (parentElement && parentElement.classList.contains('e-richtexteditor')) {\n        return parentElement.querySelector('.e-content');\n      }\n    }\n    return targetElement;\n  };\n  /**\n   * Shows the spinner loader.\n   *\n   * @returns {void}\n   */\n  Mention.prototype.showWaitingSpinner = function () {\n    if (!isNullOrUndefined(this.popupObj)) {\n      if (isNullOrUndefined(this.spinnerTemplate) && isNullOrUndefined(this.spinnerElement)) {\n        this.spinnerElement = this.popupObj.element;\n        createSpinner({\n          target: this.spinnerElement,\n          width: Browser.isDevice ? '16px' : '14px'\n        }, this.createElement);\n        showSpinner(this.spinnerElement);\n      }\n      if (!isNullOrUndefined(this.spinnerTemplate)) {\n        this.setSpinnerTemplate();\n      }\n    }\n  };\n  Mention.prototype.keyActionHandler = function (e) {\n    var isNavigation = e.action === 'down' || e.action === 'up' || e.action === 'pageUp' || e.action === 'pageDown' || e.action === 'home' || e.action === 'end';\n    var isTabAction = e.action === 'tab' || e.action === 'close';\n    if (this.list === undefined && !this.isRequested && !isTabAction && e.action !== 'escape' && e.action !== 'space') {\n      this.renderList();\n    }\n    if (isNullOrUndefined(this.list) || !isNullOrUndefined(this.liCollections) && isNavigation && this.liCollections.length === 0 || this.isRequested) {\n      return;\n    }\n    if (e.action === 'escape') {\n      e.preventDefault();\n    }\n    this.isSelected = e.action === 'escape' ? false : this.isSelected;\n    switch (e.action) {\n      case 'down':\n      case 'up':\n        this.isUpDownKey = true;\n        this.updateUpDownAction(e);\n        break;\n      case 'tab':\n        if (this.isPopupOpen) {\n          e.preventDefault();\n          var li = this.list.querySelector('.' + dropDownBaseClasses.selected);\n          if (li) {\n            this.setSelection(li, e);\n          }\n          if (this.isPopupOpen) {\n            this.hidePopup(e);\n          }\n        }\n        break;\n      case 'enter':\n        if (this.isPopupOpen) {\n          e.preventDefault();\n          if (this.popupObj && this.popupObj.element.contains(this.selectedLI)) {\n            this.updateSelectedItem(this.selectedLI, e, false, true);\n          }\n        }\n        break;\n      case 'escape':\n        if (this.isPopupOpen) {\n          this.hidePopup(e);\n        }\n        break;\n    }\n  };\n  Mention.prototype.updateUpDownAction = function (e) {\n    var focusEle = this.list.querySelector('.' + dropDownBaseClasses.focus);\n    if (this.isSelectFocusItem(focusEle)) {\n      this.setSelection(focusEle, e);\n    } else if (!isNullOrUndefined(this.liCollections)) {\n      var li = this.list.querySelector('.' + dropDownBaseClasses.selected);\n      if (!isNullOrUndefined(li)) {\n        var value = this.getFormattedValue(li.getAttribute('data-value'));\n        this.activeIndex = this.getIndexByValue(value);\n      }\n      var index = e.action === 'down' ? this.activeIndex + 1 : this.activeIndex - 1;\n      var startIndex = 0;\n      startIndex = e.action === 'down' && isNullOrUndefined(this.activeIndex) ? 0 : this.liCollections.length - 1;\n      index = index < 0 ? this.liCollections.length - 1 : index === this.liCollections.length ? 0 : index;\n      var nextItem = isNullOrUndefined(this.activeIndex) ? this.liCollections[startIndex] : this.liCollections[index];\n      if (!isNullOrUndefined(nextItem)) {\n        this.setSelection(nextItem, e);\n      }\n    }\n    if (this.isPopupOpen) {\n      e.preventDefault();\n    }\n  };\n  Mention.prototype.isSelectFocusItem = function (element) {\n    return !isNullOrUndefined(element);\n  };\n  Mention.prototype.unBindCommonEvent = function () {\n    if (!Browser.isDevice) {\n      this.keyboardModule.destroy();\n    }\n  };\n  Mention.prototype.onKeyUp = function (e) {\n    var rangetextContent;\n    if (this.isUpDownKey && this.isPopupOpen && e.keyCode === 229) {\n      this.isUpDownKey = false;\n      return;\n    }\n    this.isTyped = e.code !== 'Enter' && e.code !== 'Space' && e.code !== 'ArrowDown' && e.code !== 'ArrowUp' ? true : false;\n    if (document.activeElement != this.inputElement) {\n      this.inputElement.focus();\n    }\n    if (this.isContentEditable(this.inputElement)) {\n      this.range = this.getCurrentRange();\n      rangetextContent = this.range.startContainer.textContent.split('');\n    }\n    var currentRange = this.getTextRange();\n    var lastWordRange = this.getLastLetter(currentRange);\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    var Regex = new RegExp(this.mentionChar, 'g');\n    var charRegex = new RegExp('[a-zA-Z]', 'g');\n    if (e.key === 'Shift' || e.keyCode === 37 || e.keyCode === 39) {\n      return;\n    }\n    if (!currentRange || !lastWordRange || e.code === 'Enter' || e.keyCode === 27 || lastWordRange.match(Regex) && lastWordRange.match(Regex).length > 1 || this.isContentEditable(this.inputElement) && this.range.startContainer && this.range.startContainer.previousElementSibling && this.range.startContainer.textContent.split('').length > 0 && (rangetextContent.length === 1 || rangetextContent[rangetextContent.length - 2].indexOf('') === -1 || this.range.startContainer.nodeType === 1)) {\n      if (this.allowSpaces && currentRange && currentRange.trim() !== '' && charRegex.test(currentRange) && currentRange.indexOf(this.mentionChar) !== -1 && !this.isMatchedText() && currentRange.length > 1 && currentRange.replace(/\\u00A0/g, ' ').charAt(currentRange.length - 2) !== ' ' && this.list && this.list.querySelectorAll('ul').length > 0) {\n        this.queryString = currentRange.substring(currentRange.lastIndexOf(this.mentionChar) + 1).replace(\"\\xA0\", ' ');\n        this.searchLists(e);\n      } else if (this.isPopupOpen && (!this.allowSpaces || !lastWordRange) && e.code !== 'ArrowDown' && e.code !== 'ArrowUp') {\n        this.hidePopup();\n        this.lineBreak = true;\n      }\n      return;\n    }\n    this.queryString = lastWordRange.replace(this.mentionChar, '');\n    if (this.mentionChar.charCodeAt(0) === lastWordRange.charCodeAt(0) && this.queryString !== '' && e.keyCode !== 38 && e.keyCode !== 40 && !this.lineBreak) {\n      this.searchLists(e);\n      if (!this.isPopupOpen && this.queryString.length >= this.minLength) {\n        if (!this.isContentEditable(this.inputElement)) {\n          this.showPopup();\n        } else if (this.isContentEditable(this.inputElement) && this.range && this.range.startContainer !== this.inputElement && e.keyCode !== 9) {\n          this.showPopup();\n        }\n      }\n    } else if (lastWordRange.indexOf(this.mentionChar) === 0 && !this.isPopupOpen && e.keyCode !== 8 && (!this.popupObj || isNullOrUndefined(this.target) && !document.body.contains(this.popupObj.element) || !isNullOrUndefined(this.target) && document.body.contains(this.popupObj.element))) {\n      if (this.initRemoteRender && this.list && this.list.classList.contains('e-nodata')) {\n        this.searchLists(e);\n      }\n      this.resetList(this.dataSource, this.fields);\n      if (isNullOrUndefined(this.list)) {\n        this.initValue();\n      }\n      if (!this.isPopupOpen && e.keyCode !== 38 && e.keyCode !== 40) {\n        this.didPopupOpenByTypingInitialChar = true;\n        this.showPopup();\n        if (this.initRemoteRender && this.list.querySelectorAll('li').length === 0) {\n          this.showWaitingSpinner();\n        }\n        this.lineBreak = false;\n      }\n    } else if (this.allowSpaces && this.queryString !== '' && currentRange && currentRange.trim() !== '' && currentRange.replace(\"\\xA0\", ' ').lastIndexOf(' ') < currentRange.length - 1 && e.keyCode !== 38 && e.keyCode !== 40 && e.keyCode !== 8 && this.mentionChar.charCodeAt(0) === lastWordRange.charCodeAt(0)) {\n      this.queryString = currentRange.substring(currentRange.lastIndexOf(this.mentionChar) + 1).replace(\"\\xA0\", ' ');\n      this.searchLists(e);\n    } else if (this.queryString === '' && this.isPopupOpen && e.keyCode !== 38 && e.keyCode !== 40 && this.mentionChar.charCodeAt(0) === lastWordRange.charCodeAt(0)) {\n      this.searchLists(e);\n      if (!this.isListResetted) {\n        this.resetList(this.dataSource, this.fields);\n      }\n    }\n    this.isListResetted = false;\n  };\n  Mention.prototype.isMatchedText = function () {\n    var isMatched = false;\n    for (var i = 0; i < (this.liCollections && this.liCollections.length); i++) {\n      if (this.getTextRange() && this.getTextRange().substring(this.getTextRange().lastIndexOf(this.mentionChar) + 1).replace(\"\\xA0\", ' ').trim() === this.liCollections[i].getAttribute('data-value').toLowerCase()) {\n        isMatched = true;\n      }\n    }\n    return isMatched;\n  };\n  Mention.prototype.getCurrentRange = function () {\n    this.range = this.inputElement.ownerDocument.getSelection().getRangeAt(0);\n    return this.range;\n  };\n  Mention.prototype.searchLists = function (e) {\n    var _this = this;\n    this.isDataFetched = false;\n    if (isNullOrUndefined(this.list)) {\n      _super.prototype.render.call(this);\n      this.unWireListEvents();\n      this.wireListEvents();\n    }\n    if (e.type !== 'mousedown' && (e.keyCode === 40 || e.keyCode === 38)) {\n      this.queryString = this.queryString === '' ? null : this.queryString;\n      this.beforePopupOpen = true;\n      this.resetList(this.dataSource, this.fields);\n      return;\n    }\n    this.isSelected = false;\n    this.activeIndex = null;\n    var eventArgs = {\n      preventDefaultAction: false,\n      text: this.queryString,\n      updateData: function updateData(dataSource, query, fields) {\n        if (eventArgs.cancel) {\n          return;\n        }\n        _this.isFiltered = true;\n        _this.filterAction(dataSource, query, fields);\n      },\n      cancel: false\n    };\n    this.trigger('filtering', eventArgs, function (eventArgs) {\n      if (!eventArgs.cancel && !_this.isFiltered && !eventArgs.preventDefaultAction) {\n        _this.filterAction(_this.dataSource, null, _this.fields);\n      }\n    });\n  };\n  Mention.prototype.filterAction = function (dataSource, query, fields) {\n    this.beforePopupOpen = true;\n    if (this.queryString.length >= this.minLength) {\n      this.resetList(dataSource, fields, query);\n      this.isListResetted = true;\n    } else {\n      if (this.isPopupOpen) {\n        this.hidePopup();\n      }\n      this.beforePopupOpen = false;\n    }\n    this.setDataIndex();\n    this.renderReactTemplates();\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Mention.prototype.onActionComplete = function (ulElement, list, e, isUpdated) {\n    _super.prototype.onActionComplete.call(this, ulElement, list, e);\n    if (this.isActive) {\n      if (!isNullOrUndefined(ulElement)) {\n        attributes(ulElement, {\n          'id': this.inputElement.id + '_options',\n          'role': 'listbox',\n          'aria-hidden': 'false'\n        });\n      }\n      var focusItem = ulElement.querySelector('.' + dropDownBaseClasses.li);\n      if (focusItem) {\n        focusItem.classList.add(dropDownBaseClasses.selected);\n        this.selectedLI = focusItem;\n        var value = this.getFormattedValue(focusItem.getAttribute('data-value'));\n        this.selectEventCallback(focusItem, this.getDataByValue(value), value, true);\n      }\n    }\n  };\n  Mention.prototype.setDataIndex = function () {\n    for (var i = 0; this.liCollections && i < this.liCollections.length; i++) {\n      this.liCollections[i].setAttribute('data-index', i.toString());\n    }\n  };\n  Mention.prototype.listOption = function (dataSource, fieldsSettings) {\n    var _this = this;\n    var fields = _super.prototype.listOption.call(this, dataSource, fieldsSettings);\n    if (isNullOrUndefined(fields.itemCreated)) {\n      fields.itemCreated = function (e) {\n        if (_this.highlight) {\n          if (_this.inputElement.tagName === _this.getNgDirective() && _this.itemTemplate) {\n            setTimeout(function () {\n              highlightSearch(e.item, _this.queryString, _this.ignoreCase, _this.filterType);\n            }, 0);\n          } else {\n            highlightSearch(e.item, _this.queryString, _this.ignoreCase, _this.filterType);\n          }\n        }\n      };\n    } else {\n      var itemCreated_1 = fields.itemCreated;\n      fields.itemCreated = function (e) {\n        if (_this.highlight) {\n          highlightSearch(e.item, _this.queryString, _this.ignoreCase, _this.filterType);\n        }\n        itemCreated_1.apply(_this, [e]);\n      };\n    }\n    return fields;\n  };\n  Mention.prototype.elementValue = function () {\n    if (!this.isContentEditable(this.inputElement)) {\n      return this.inputElement.value.replace(this.mentionChar, '');\n    } else {\n      return this.inputElement.textContent.replace(this.mentionChar, '');\n    }\n  };\n  Mention.prototype.getQuery = function (query) {\n    var filterQuery = query ? query.clone() : this.query ? this.query.clone() : new Query();\n    var filterType = this.queryString === '' && !isNullOrUndefined(this.elementValue()) ? 'equal' : this.filterType;\n    var queryString = this.queryString === '' && !isNullOrUndefined(this.elementValue()) ? this.elementValue() : this.queryString;\n    if (this.isFiltered) {\n      return filterQuery;\n    }\n    if (this.queryString !== null && this.queryString !== '') {\n      var dataType = this.typeOfData(this.dataSource).typeof;\n      if (!(this.dataSource instanceof DataManager) && dataType === 'string' || dataType === 'number') {\n        filterQuery.where('', filterType, queryString, this.ignoreCase, this.ignoreAccent);\n      } else {\n        var mapping = !isNullOrUndefined(this.fields.text) ? this.fields.text : '';\n        filterQuery.where(mapping, filterType, queryString, this.ignoreCase, this.ignoreAccent);\n      }\n    }\n    if (!isNullOrUndefined(this.suggestionCount)) {\n      // Since defualt value of suggestioncount is 25, checked the condition\n      if (this.suggestionCount !== 25) {\n        for (var queryElements = 0; queryElements < filterQuery.queries.length; queryElements++) {\n          if (filterQuery.queries[queryElements].fn === 'onTake') {\n            filterQuery.queries.splice(queryElements, 1);\n          }\n        }\n      }\n      filterQuery.take(this.suggestionCount);\n    }\n    return filterQuery;\n  };\n  Mention.prototype.renderHightSearch = function () {\n    if (this.highlight) {\n      for (var i = 0; i < this.liCollections.length; i++) {\n        var isHighlight = this.ulElement.querySelector('.e-active');\n        if (!isHighlight) {\n          revertHighlightSearch(this.liCollections[i]);\n          highlightSearch(this.liCollections[i], this.queryString, this.ignoreCase, this.filterType);\n        }\n      }\n    }\n  };\n  Mention.prototype.getTextRange = function () {\n    var text;\n    if (!this.isContentEditable(this.inputElement)) {\n      var component = this.inputElement;\n      if (!isNullOrUndefined(component)) {\n        var startPos = component.selectionStart;\n        if (component.value && startPos >= 0) {\n          text = component.value.substring(0, startPos);\n        }\n      }\n    } else {\n      if (this.range) {\n        var selectedElem = this.range.startContainer;\n        if (!isNullOrUndefined(selectedElem)) {\n          var workingNodeContent = selectedElem.textContent;\n          var selectStartOffset = this.range.startOffset;\n          if (workingNodeContent && selectStartOffset >= 0) {\n            text = workingNodeContent.substring(0, selectStartOffset);\n          }\n        }\n      }\n    }\n    return text;\n  };\n  Mention.prototype.getLastLetter = function (text) {\n    if (isNullOrUndefined(text)) {\n      return '';\n    }\n    var textValue = text.replace(/\\u00A0/g, ' ');\n    var words = textValue.split(/\\s+/);\n    var wordCnt = words.length - 1;\n    return words[wordCnt].trim();\n  };\n  Mention.prototype.isContentEditable = function (element) {\n    return element && element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA';\n  };\n  /**\n   * Opens the popup that displays the list of items.\n   *\n   * @returns {void}\n   */\n  Mention.prototype.showPopup = function () {\n    this.beforePopupOpen = true;\n    if (document.activeElement != this.inputElement) {\n      this.inputElement.focus();\n    }\n    this.queryString = this.didPopupOpenByTypingInitialChar ? this.queryString : '';\n    this.didPopupOpenByTypingInitialChar = false;\n    if (this.isContentEditable(this.inputElement)) {\n      this.range = this.getCurrentRange();\n    }\n    if (!this.isTyped) {\n      this.resetList(this.dataSource, this.fields);\n    }\n    if (isNullOrUndefined(this.list)) {\n      this.initValue();\n    }\n    this.renderPopup();\n    attributes(this.inputElement, {\n      'aria-activedescendant': this.selectedElementID\n    });\n    if (this.selectedElementID == null) {\n      this.inputElement.removeAttribute('aria-activedescendant');\n    }\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-param */\n  /**\n   * Hides the popup if it is in an open state.\n   *\n   * @returns {void}\n   */\n  Mention.prototype.hidePopup = function (e) {\n    this.removeSelection();\n    this.closePopup(0, e);\n  };\n  Mention.prototype.closePopup = function (delay, e) {\n    var _this = this;\n    if (!(this.popupObj && document.body.contains(this.popupObj.element) && this.beforePopupOpen)) {\n      return;\n    }\n    EventHandler.remove(document, 'mousedown', this.onDocumentClick);\n    this.inputElement.removeAttribute('aria-owns');\n    this.inputElement.removeAttribute('aria-activedescendant');\n    this.beforePopupOpen = false;\n    var animModel = {\n      name: 'FadeOut',\n      duration: 100,\n      delay: delay ? delay : 0\n    };\n    var popupInstance = this.popupObj;\n    var eventArgs = {\n      popup: popupInstance,\n      cancel: false,\n      animation: animModel,\n      event: e || null\n    };\n    this.trigger('closed', eventArgs, function (eventArgs) {\n      if (!eventArgs.cancel && _this.popupObj) {\n        if (_this.isPopupOpen) {\n          _this.popupObj.hide(new Animation(eventArgs.animation));\n        } else {\n          _this.destroyPopup();\n        }\n      }\n    });\n  };\n  Mention.prototype.renderPopup = function () {\n    var _this = this;\n    var args = {\n      cancel: false\n    };\n    this.trigger('beforeOpen', args, function (args) {\n      if (!args.cancel) {\n        var popupEle_1;\n        if (isNullOrUndefined(_this.target)) {\n          popupEle_1 = _this.createElement('div', {\n            id: _this.inputElement.id + '_popup',\n            className: 'e-mention e-popup ' + (_this.cssClass != null ? _this.cssClass : '')\n          });\n        } else {\n          popupEle_1 = _this.element;\n          if (_this.cssClass != null) {\n            addClass([popupEle_1], _this.cssClass.split(' '));\n          }\n        }\n        if (!isNullOrUndefined(_this.target)) {\n          popupEle_1.id = _this.inputElement.id + '_popup';\n        }\n        _this.listHeight = formatUnit(_this.popupHeight);\n        if (!isNullOrUndefined(_this.list.querySelector('li')) && !_this.initRemoteRender) {\n          var li = _this.list.querySelector('.' + dropDownBaseClasses.focus);\n          if (!isNullOrUndefined(li)) {\n            _this.selectedLI = li;\n            var value = _this.getFormattedValue(li.getAttribute('data-value'));\n            _this.selectEventCallback(li, _this.getDataByValue(value), value, true);\n          }\n        }\n        append([_this.list], popupEle_1);\n        if (_this.inputElement.parentElement && _this.inputElement.parentElement.parentElement && _this.inputElement.parentElement.parentElement.classList.contains('e-richtexteditor')) {\n          if (popupEle_1.firstElementChild && popupEle_1.firstElementChild.childElementCount > 0) {\n            popupEle_1.firstElementChild.setAttribute('aria-owns', _this.inputElement.parentElement.parentElement.id);\n          }\n        }\n        if (!_this.popupObj || !document.body.contains(_this.popupObj.element) || !document.contains(popupEle_1) && isNullOrUndefined(_this.target)) {\n          document.body.appendChild(popupEle_1);\n        }\n        var coordinates_1;\n        popupEle_1.style.visibility = 'hidden';\n        _this.setHeight(popupEle_1);\n        var offsetValue = 0;\n        var left = 0;\n        _this.initializePopup(popupEle_1, offsetValue, left);\n        _this.checkCollision(popupEle_1);\n        popupEle_1.style.visibility = 'visible';\n        addClass([popupEle_1], ['e-mention', 'e-popup', 'e-popup-close']);\n        if (!isNullOrUndefined(_this.list)) {\n          _this.unWireListEvents();\n          _this.wireListEvents();\n        }\n        _this.selectedElementID = _this.selectedLI ? _this.selectedLI.id : null;\n        attributes(_this.inputElement, {\n          'aria-owns': _this.inputElement.id + '_options',\n          'aria-activedescendant': _this.selectedElementID\n        });\n        if (_this.selectedElementID == null) {\n          _this.inputElement.removeAttribute('aria-activedescendant');\n        }\n        var animModel = {\n          name: 'FadeIn',\n          duration: 100\n        };\n        _this.beforePopupOpen = true;\n        var popupInstance = _this.popupObj;\n        var eventArgs = {\n          popup: popupInstance,\n          cancel: false,\n          animation: animModel\n        };\n        _this.trigger('opened', eventArgs, function (eventArgs) {\n          if (!eventArgs.cancel) {\n            _this.renderReactTemplates();\n            _this.popupObj.show(new Animation(eventArgs.animation), _this.zIndex === 1000 ? _this.inputElement : null);\n            if (isNullOrUndefined(_this.getTriggerCharPosition())) {\n              return;\n            }\n            coordinates_1 = _this.getCoordinates(_this.inputElement, _this.getTriggerCharPosition());\n            if (!_this.isCollided) {\n              popupEle_1.style.cssText = 'top: '.concat(coordinates_1.top.toString(), 'px;\\n left: ').concat(coordinates_1.left.toString(), 'px;\\nposition: absolute;\\n display: block;');\n            } else {\n              popupEle_1.style.left = formatUnit(coordinates_1.left);\n              popupEle_1.style.top = formatUnit(coordinates_1.top - parseInt(_this.popupHeight.toString()));\n              _this.isCollided = false;\n            }\n            popupEle_1.style.width = _this.popupWidth !== '100%' && !isNullOrUndefined(_this.popupWidth) ? formatUnit(_this.popupWidth) : 'auto';\n            _this.setHeight(popupEle_1);\n            popupEle_1.style.zIndex = _this.zIndex === 1000 ? getZindexPartial(popupEle_1).toString() : _this.zIndex.toString();\n          } else {\n            _this.beforePopupOpen = false;\n            _this.destroyPopup();\n          }\n        });\n      } else {\n        _this.beforePopupOpen = false;\n      }\n    });\n  };\n  Mention.prototype.setHeight = function (popupEle) {\n    if (this.popupHeight !== 'auto' && this.list) {\n      this.list.style.maxHeight = (parseInt(this.listHeight, 10) - 2).toString() + 'px'; // due to box-sizing property\n      popupEle.style.maxHeight = formatUnit(this.popupHeight);\n    } else {\n      popupEle.style.height = 'auto';\n    }\n  };\n  Mention.prototype.checkCollision = function (popupEle) {\n    if (!Browser.isDevice || Browser.isDevice && !(this.getModuleName() === 'mention')) {\n      var coordinates = this.getCoordinates(this.inputElement, this.getTriggerCharPosition());\n      var collision = isCollide(popupEle, null, coordinates.left, coordinates.top);\n      if (collision.length > 0) {\n        popupEle.style.marginTop = -parseInt(getComputedStyle(popupEle).marginTop, 10) + 'px';\n        this.isCollided = true;\n      }\n      this.popupObj.resolveCollision();\n    }\n  };\n  Mention.prototype.getTriggerCharPosition = function () {\n    var mostRecentTriggerCharPos;\n    var currentRange = this.getTextRange();\n    if (currentRange !== undefined && currentRange !== null) {\n      mostRecentTriggerCharPos = 0;\n      var idx = currentRange.lastIndexOf(this.mentionChar);\n      if (idx >= mostRecentTriggerCharPos) {\n        mostRecentTriggerCharPos = idx;\n      }\n    }\n    return mostRecentTriggerCharPos ? mostRecentTriggerCharPos : 0;\n  };\n  Mention.prototype.initializePopup = function (element, offsetValue, left) {\n    var _this = this;\n    this.popupObj = new Popup(element, {\n      width: this.setWidth(),\n      targetType: 'relative',\n      relateTo: this.inputElement,\n      collision: {\n        X: 'flip',\n        Y: 'flip'\n      },\n      offsetY: offsetValue,\n      enableRtl: this.enableRtl,\n      offsetX: left,\n      position: {\n        X: 'left',\n        Y: 'bottom'\n      },\n      actionOnScroll: 'hide',\n      zIndex: this.zIndex,\n      close: function close() {\n        _this.destroyPopup();\n      },\n      open: function open() {\n        EventHandler.add(document, 'mousedown', _this.onDocumentClick, _this);\n        _this.isPopupOpen = true;\n        _this.setDataIndex();\n      }\n    });\n  };\n  Mention.prototype.setWidth = function () {\n    var width = formatUnit(this.popupWidth);\n    if (width.indexOf('%') > -1) {\n      var inputWidth = this.inputElement.offsetWidth * parseFloat(width) / 100;\n      width = inputWidth.toString() + 'px';\n    }\n    return width;\n  };\n  Mention.prototype.destroyPopup = function () {\n    this.isPopupOpen = false;\n    this.popupObj.destroy();\n    if (isNullOrUndefined(this.target)) {\n      detach(this.popupObj.element);\n    } else {\n      this.popupObj.element.innerHTML = '';\n      this.popupObj.element.removeAttribute('style');\n      this.popupObj.element.removeAttribute('aria-disabled');\n    }\n  };\n  Mention.prototype.onDocumentClick = function (e) {\n    var target = e.target;\n    if (!(!isNullOrUndefined(this.popupObj) && closest(target, '#' + this.popupObj.element.id))) {\n      this.hidePopup(e);\n    }\n  };\n  Mention.prototype.getCoordinates = function (element, position) {\n    var properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX', 'overflowY', 'borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch', 'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily', 'textAlign', 'textTransform', 'textIndent', 'textDecoration', 'letterSpacing', 'wordSpacing'];\n    var div;\n    var span;\n    var range;\n    var globalRange;\n    var coordinates;\n    var computed;\n    var rect;\n    if (!this.isContentEditable(this.inputElement)) {\n      div = this.createElement('div', {\n        className: 'e-form-mirror-div'\n      });\n      document.body.appendChild(div);\n      computed = getComputedStyle(element);\n      div.style.position = 'absolute';\n      div.style.visibility = 'hidden';\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      properties.forEach(function (prop) {\n        // eslint-disable-next-line security/detect-object-injection\n        div.style[prop] = computed[prop];\n      });\n      div.textContent = element.value.substring(0, position);\n      if (this.inputElement.nodeName === 'INPUT') {\n        div.textContent = div.textContent.replace(/\\s/g, \"\\xA0\");\n      }\n      span = this.createElement('span');\n      span.textContent = element.value.substring(position) || '.';\n      div.appendChild(span);\n      rect = element.getBoundingClientRect();\n    } else {\n      var selectedNodePosition = this.getTriggerCharPosition();\n      globalRange = this.range;\n      range = document.createRange();\n      if (this.getTextRange() && this.getTextRange().lastIndexOf(this.mentionChar) !== -1) {\n        range.setStart(globalRange.startContainer, selectedNodePosition);\n        range.setEnd(globalRange.startContainer, selectedNodePosition);\n      } else {\n        range.setStart(globalRange.startContainer, globalRange.startOffset);\n        range.setEnd(globalRange.startContainer, globalRange.endOffset);\n      }\n      this.isTyped = false;\n      range.collapse(false);\n      rect = range.getBoundingClientRect().top === 0 ? range.startContainer.getClientRects()[0] : range.getBoundingClientRect();\n    }\n    var doc = document.documentElement;\n    var windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    var windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    var width = 0;\n    if (!isNullOrUndefined(range) && range.getBoundingClientRect().top === 0) {\n      for (var i = 0; i < this.range.startContainer.childNodes.length; i++) {\n        if (this.range.startContainer.childNodes[i].nodeType !== Node.TEXT_NODE && this.range.startContainer.childNodes[i].textContent.trim() !== '') {\n          width += this.range.startContainer.childNodes[i].getClientRects()[0].width;\n        } else if (this.range.startContainer.childNodes[i].textContent !== '') {\n          var span_1 = document.createElement(\"span\");\n          span_1.innerHTML = this.range.startContainer.childNodes[i].nodeValue;\n          document.body.appendChild(span_1);\n          var textNodeWidth = span_1.offsetWidth;\n          document.body.removeChild(span_1);\n          width += textNodeWidth;\n        }\n      }\n    }\n    if (!this.isContentEditable(this.inputElement)) {\n      coordinates = {\n        top: rect.top + windowTop + span.offsetTop + parseInt(computed.borderTopWidth, 10) + parseInt(computed.fontSize, 10) + 3 - element.scrollTop - (this.isCollided ? 10 : 0),\n        left: rect.left + windowLeft + span.offsetLeft + parseInt(computed.borderLeftWidth, 10)\n      };\n      document.body.removeChild(div);\n    } else {\n      coordinates = {\n        top: rect.top + windowTop + parseInt(getComputedStyle(this.inputElement).fontSize, 10) - (this.isCollided ? 10 : 0),\n        left: rect.left + windowLeft + width\n      };\n    }\n    return coordinates;\n  };\n  Mention.prototype.initValue = function () {\n    this.renderList();\n    if (this.dataSource instanceof DataManager) {\n      this.initRemoteRender = true;\n    } else {\n      this.updateValues();\n    }\n  };\n  Mention.prototype.updateValues = function () {\n    var li = this.list.querySelector('.' + dropDownBaseClasses.focus);\n    if (!isNullOrUndefined(li)) {\n      this.setSelection(li, null);\n    }\n  };\n  Mention.prototype.renderList = function () {\n    _super.prototype.render.call(this);\n    this.unWireListEvents();\n    this.wireListEvents();\n  };\n  /**\n   * Event binding for list\n   *\n   * @returns {void}\n   */\n  Mention.prototype.wireListEvents = function () {\n    EventHandler.add(this.list, 'click', this.onMouseClick, this);\n    EventHandler.add(this.list, 'mouseover', this.onMouseOver, this);\n    EventHandler.add(this.list, 'mouseout', this.onMouseLeave, this);\n  };\n  /**\n   * Event un binding for list items.\n   *\n   * @returns {void}\n   */\n  Mention.prototype.unWireListEvents = function () {\n    EventHandler.remove(this.list, 'click', this.onMouseClick);\n    EventHandler.remove(this.list, 'mouseover', this.onMouseOver);\n    EventHandler.remove(this.list, 'mouseout', this.onMouseLeave);\n  };\n  Mention.prototype.onMouseClick = function (e) {\n    var target = e.target;\n    var li = closest(target, '.' + dropDownBaseClasses.li);\n    if (!this.isValidLI(li)) {\n      return;\n    }\n    this.isSelected = true;\n    this.setSelection(li, e);\n    var delay = 100;\n    this.closePopup(delay, e);\n    this.inputElement.focus();\n  };\n  Mention.prototype.updateSelectedItem = function (li, e, preventSelect, isSelection) {\n    var _this = this;\n    this.removeSelection();\n    li.classList.add(dropDownBaseClasses.selected);\n    this.removeHover();\n    var value = this.getFormattedValue(li.getAttribute('data-value'));\n    var selectedData = this.getDataByValue(value);\n    if (!preventSelect && !isNullOrUndefined(e) && !(e.action === \"down\" || e.action === \"up\")) {\n      var items = this.detachChanges(selectedData);\n      this.isSelected = true;\n      var eventArgs = {\n        e: e,\n        item: li,\n        itemData: items,\n        isInteracted: e ? true : false,\n        cancel: false\n      };\n      this.trigger('select', eventArgs, function (eventArgs) {\n        if (eventArgs.cancel) {\n          li.classList.remove(dropDownBaseClasses.selected);\n          _this.isSelected = false;\n          _this.isSelectCancel = true;\n        } else {\n          _this.selectEventCallback(li, selectedData, value);\n          if (isSelection) {\n            _this.setSelectOptions(li, e);\n          }\n        }\n      });\n    } else {\n      this.selectEventCallback(li, selectedData, value);\n      if (isSelection) {\n        this.setSelectOptions(li, e);\n      }\n    }\n  };\n  Mention.prototype.setSelection = function (li, e) {\n    if (this.isValidLI(li) && (!li.classList.contains(dropDownBaseClasses.selected) || this.isPopupOpen && this.isSelected && li.classList.contains(dropDownBaseClasses.selected))) {\n      this.updateSelectedItem(li, e, false, true);\n    } else {\n      this.setSelectOptions(li, e);\n    }\n  };\n  Mention.prototype.setSelectOptions = function (li, e) {\n    if (this.list) {\n      this.removeHover();\n    }\n    this.previousSelectedLI = !isNullOrUndefined(this.selectedLI) ? this.selectedLI : null;\n    this.selectedLI = li;\n    if (this.isPopupOpen && !isNullOrUndefined(this.selectedLI)) {\n      this.setScrollPosition(e);\n    }\n    if (e && (e.keyCode === 38 || e.keyCode === 40)) {\n      return;\n    }\n    if (isNullOrUndefined(e) || this.setValue(e)) {\n      return;\n    }\n  };\n  Mention.prototype.setScrollPosition = function (e) {\n    if (!isNullOrUndefined(e)) {\n      switch (e.action) {\n        case 'pageDown':\n        case 'down':\n        case 'end':\n          this.scrollBottom();\n          break;\n        default:\n          this.scrollTop();\n          break;\n      }\n    } else {\n      this.scrollBottom(true);\n    }\n  };\n  Mention.prototype.scrollBottom = function (isInitial) {\n    if (!isNullOrUndefined(this.selectedLI)) {\n      var currentOffset = this.list.offsetHeight;\n      var nextBottom = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;\n      var nextOffset = this.list.scrollTop + nextBottom - currentOffset;\n      nextOffset = isInitial ? nextOffset + parseInt(getComputedStyle(this.list).paddingTop, 10) * 2 : nextOffset;\n      var boxRange = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;\n      if (this.activeIndex === 0) {\n        this.list.scrollTop = 0;\n      } else if (nextBottom > currentOffset || !(boxRange > 0 && this.list.offsetHeight > boxRange)) {\n        this.list.scrollTop = nextOffset;\n      }\n    }\n  };\n  Mention.prototype.scrollTop = function () {\n    if (!isNullOrUndefined(this.selectedLI)) {\n      var nextOffset = this.selectedLI.offsetTop - this.list.scrollTop;\n      nextOffset = this.fields.groupBy && nextOffset;\n      var boxRange = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;\n      if (this.activeIndex === 0) {\n        this.list.scrollTop = 0;\n      } else if (nextOffset < 0) {\n        this.list.scrollTop = this.list.scrollTop + nextOffset;\n      } else if (!(boxRange > 0 && this.list.offsetHeight > boxRange)) {\n        this.list.scrollTop = this.selectedLI.offsetTop;\n      }\n    }\n  };\n  Mention.prototype.selectEventCallback = function (li, selectedData, value, selectLi) {\n    this.previousItemData = !isNullOrUndefined(this.itemData) ? this.itemData : null;\n    this.item = li;\n    this.itemData = selectedData;\n    var focusedItem = this.list.querySelector('.' + dropDownBaseClasses.focus);\n    if (focusedItem) {\n      removeClass([focusedItem], dropDownBaseClasses.focus);\n    }\n    if (selectLi) {\n      addClass([li], dropDownBaseClasses.selected);\n    }\n    li.setAttribute('aria-selected', 'true');\n    this.activeIndex = this.getIndexByValue(value);\n  };\n  Mention.prototype.detachChanges = function (value) {\n    var items;\n    if (typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number') {\n      items = Object.defineProperties({}, {\n        value: {\n          value: value,\n          enumerable: true\n        },\n        text: {\n          value: value,\n          enumerable: true\n        }\n      });\n    } else {\n      items = value;\n    }\n    return items;\n  };\n  Mention.prototype.setValue = function (e) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (!this.isReact) {\n      if (!isNullOrUndefined(this.displayTemplate)) {\n        this.setDisplayTemplate();\n      }\n      this.updateMentionValue(e);\n      return true;\n    } else {\n      if (!isNullOrUndefined(this.displayTemplate)) {\n        this.setDisplayTemplate(e);\n      } else {\n        this.updateMentionValue(e);\n      }\n      return true;\n    }\n  };\n  Mention.prototype.updateMentionValue = function (e) {\n    var dataItem = this.getItemData();\n    var textSuffix;\n    var value;\n    var endPos;\n    var range;\n    var globalRange;\n    var selection = this.inputElement.ownerDocument.getSelection();\n    var startPos = this.getTriggerCharPosition();\n    textSuffix = typeof this.suffixText === 'string' ? this.suffixText : '';\n    if (this.isSelectCancel) {\n      this.isSelectCancel = false;\n      return;\n    }\n    if (dataItem.text !== null) {\n      value = this.mentionVal(dataItem.text);\n    }\n    if (!this.isContentEditable(this.inputElement)) {\n      var myField = this.inputElement;\n      var currentTriggerSnippet = this.getTextRange().substring(startPos + this.mentionChar.length, this.getTextRange().length);\n      value += textSuffix;\n      endPos = startPos + this.mentionChar.length;\n      endPos += currentTriggerSnippet.length;\n      myField.value = myField.value.substring(0, startPos) + value + myField.value.substring(endPos, myField.value.length);\n      myField.selectionStart = startPos + value.length;\n      myField.selectionEnd = startPos + value.length;\n      if (this.isPopupOpen) {\n        this.hidePopup();\n      }\n      this.onChangeEvent(e);\n    } else {\n      endPos = this.getTriggerCharPosition() + this.mentionChar.length;\n      if (this.range && this.range.startContainer.textContent.trim() !== this.mentionChar) {\n        endPos = this.range.endOffset;\n      }\n      globalRange = this.range;\n      range = document.createRange();\n      if (this.getTextRange() && this.getTextRange().lastIndexOf(this.mentionChar) !== -1 || this.getTextRange() && this.getTextRange().trim() === this.mentionChar) {\n        range.setStart(globalRange.startContainer, startPos);\n        range.setEnd(globalRange.startContainer, endPos);\n      } else {\n        if (globalRange.commonAncestorContainer.textContent.trim() !== '' && !isNullOrUndefined(globalRange.commonAncestorContainer.textContent.trim()) && this.getTextRange() && this.getTextRange().lastIndexOf(this.mentionChar) !== -1) {\n          range.setStart(globalRange.startContainer, globalRange.startOffset - 1);\n          range.setEnd(globalRange.startContainer, globalRange.endOffset - 1);\n        } else {\n          range.setStart(globalRange.startContainer, globalRange.startOffset);\n          range.setEnd(globalRange.startContainer, globalRange.endOffset);\n        }\n      }\n      this.isTyped = false;\n      range.deleteContents();\n      var element = this.createElement('div');\n      element.innerHTML = value;\n      var frag = document.createDocumentFragment();\n      var node = void 0;\n      var lastNode = void 0;\n      // eslint-disable-next-line no-cond-assign\n      while (node = element.firstChild) {\n        lastNode = frag.appendChild(node);\n      }\n      range.insertNode(frag);\n      if (lastNode) {\n        range = range.cloneRange();\n        range.setStartAfter(lastNode);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n      if (this.isPopupOpen) {\n        this.hidePopup();\n      }\n      this.onChangeEvent(e);\n    }\n  };\n  Mention.prototype.mentionVal = function (value) {\n    var showChar = this.showMentionChar ? this.mentionChar : '';\n    if (!isNullOrUndefined(this.displayTemplate) && !isNullOrUndefined(this.displayTempElement)) {\n      value = this.displayTempElement.innerHTML;\n    }\n    if (this.isContentEditable(this.inputElement)) {\n      return '<span contenteditable=\"false\" class=\"e-mention-chip\">' + showChar + value + '</span>'.concat(typeof this.suffixText === 'string' ? this.suffixText : ' ');\n    } else {\n      return showChar + value;\n    }\n  };\n  Mention.prototype.setDisplayTemplate = function (e) {\n    var _this = this;\n    var compiledString;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (this.isReact) {\n      this.clearTemplate(['displayTemplate']);\n      if (this.displayTempElement) {\n        detach(this.displayTempElement);\n        this.displayTempElement = null;\n      }\n    }\n    if (!this.displayTempElement) {\n      this.displayTempElement = this.createElement('div');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (!this.isReact) {\n      this.displayTempElement.innerHTML = '';\n    }\n    compiledString = compile(this.displayTemplate);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var displayCompTemp = compiledString(this.itemData, this, 'displayTemplate', this.displayTemplateId, this.isStringTemplate, null, this.displayTempElement);\n    if (displayCompTemp && displayCompTemp.length > 0) {\n      append(displayCompTemp, this.displayTempElement);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (!this.isReact) {\n      this.renderTemplates();\n    } else {\n      this.renderTemplates(function () {\n        _this.updateMentionValue(e);\n      });\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Mention.prototype.renderTemplates = function (callBack) {\n    this.renderReactTemplates(callBack);\n  };\n  Mention.prototype.setSpinnerTemplate = function () {\n    var _this = this;\n    var compiledString;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (this.isReact) {\n      this.clearTemplate(['spinnerTemplate']);\n      if (this.spinnerTemplateElement) {\n        detach(this.spinnerTemplateElement);\n        this.spinnerTemplateElement = null;\n      }\n    }\n    if (!this.spinnerTemplateElement) {\n      this.spinnerTemplateElement = this.createElement('div');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (!this.isReact) {\n      this.spinnerTemplateElement.innerHTML = '';\n    }\n    compiledString = compile(this.spinnerTemplate);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var spinnerCompTemp = compiledString(null, this, 'spinnerTemplate', this.spinnerTemplateId, this.isStringTemplate, null, this.spinnerTemplateElement);\n    if (spinnerCompTemp && spinnerCompTemp.length > 0) {\n      for (var i = 0; i < spinnerCompTemp.length; i++) {\n        this.spinnerTemplateElement.appendChild(spinnerCompTemp[i]);\n      }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (!this.isReact) {\n      this.renderTemplates();\n      this.popupObj.element.appendChild(this.spinnerTemplateElement);\n    } else {\n      this.renderTemplates(function () {\n        _this.popupObj.element.appendChild(_this.spinnerTemplateElement);\n      });\n    }\n  };\n  Mention.prototype.onChangeEvent = function (eve) {\n    this.isSelected = false;\n    var items = this.detachMentionChanges(this.itemData);\n    var preItems;\n    if (typeof this.previousItemData === 'string' || typeof this.previousItemData === 'boolean' || typeof this.previousItemData === 'number') {\n      preItems = Object.defineProperties({}, {\n        value: {\n          value: this.previousItemData,\n          enumerable: true\n        },\n        text: {\n          value: this.previousItemData,\n          enumerable: true\n        }\n      });\n    } else {\n      preItems = this.previousItemData;\n    }\n    var eventArgs = {\n      e: eve,\n      item: this.item,\n      itemData: items,\n      previousItem: this.previousSelectedLI,\n      previousItemData: preItems,\n      isInteracted: eve ? true : false,\n      value: this.item.innerHTML,\n      element: this.inputElement\n    };\n    this.trigger('change', eventArgs);\n  };\n  Mention.prototype.detachMentionChanges = function (value) {\n    var items;\n    if (typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number') {\n      items = Object.defineProperties({}, {\n        value: {\n          value: value,\n          enumerable: true\n        },\n        text: {\n          value: value,\n          enumerable: true\n        }\n      });\n    } else {\n      items = value;\n    }\n    return items;\n  };\n  Mention.prototype.getItemData = function () {\n    var fields = this.fields;\n    var dataItem = null;\n    dataItem = this.itemData;\n    var dataValue;\n    var dataText;\n    if (!isNullOrUndefined(dataItem)) {\n      dataValue = getValue(fields.value, dataItem);\n      dataText = getValue(fields.text, dataItem);\n    }\n    var value = !isNullOrUndefined(dataItem) && !isUndefined(dataValue) ? dataValue : dataItem;\n    var text = !isNullOrUndefined(dataItem) && !isUndefined(dataValue) ? dataText : dataItem;\n    return {\n      value: value,\n      text: text\n    };\n  };\n  Mention.prototype.removeSelection = function () {\n    if (this.list) {\n      var selectedItems = this.list.querySelectorAll('.' + dropDownBaseClasses.selected);\n      if (selectedItems.length) {\n        removeClass(selectedItems, dropDownBaseClasses.selected);\n        selectedItems[0].removeAttribute('aria-selected');\n      }\n    }\n  };\n  Mention.prototype.onMouseOver = function (e) {\n    var currentLi = closest(e.target, '.' + dropDownBaseClasses.li);\n    this.setHover(currentLi);\n  };\n  Mention.prototype.setHover = function (li) {\n    if (this.isValidLI(li) && !li.classList.contains(dropDownBaseClasses.hover)) {\n      this.removeHover();\n      addClass([li], dropDownBaseClasses.hover);\n    }\n  };\n  Mention.prototype.removeHover = function () {\n    if (this.list) {\n      var hoveredItem = this.list.querySelectorAll('.' + dropDownBaseClasses.hover);\n      if (hoveredItem && hoveredItem.length) {\n        removeClass(hoveredItem, dropDownBaseClasses.hover);\n      }\n    }\n  };\n  Mention.prototype.isValidLI = function (li) {\n    return li && li.hasAttribute('role') && li.getAttribute('role') === 'option';\n  };\n  Mention.prototype.onMouseLeave = function () {\n    this.removeHover();\n  };\n  /**\n   * Search the entered text and show it in the suggestion list if available.\n   *\n   * @returns {void}\n   */\n  Mention.prototype.search = function (text, positionX, positionY) {\n    if (this.isContentEditable(this.inputElement)) {\n      this.range = this.getCurrentRange();\n    }\n    var currentRange = this.getTextRange();\n    var lastWordRange = this.getLastLetter(currentRange);\n    if (this.ignoreCase && (text === lastWordRange || text === lastWordRange.toLowerCase()) || !this.ignoreCase && text === lastWordRange) {\n      this.resetList(this.dataSource, this.fields);\n    } else {\n      if (this.isPopupOpen) {\n        this.hidePopup();\n      }\n      return;\n    }\n    if (isNullOrUndefined(this.list)) {\n      this.renderList();\n      this.renderPopup();\n    } else {\n      this.showPopup();\n    }\n    this.popupObj.element.style.left = formatUnit(positionX);\n    this.popupObj.element.style.top = formatUnit(positionY);\n  };\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n  Mention.prototype.destroy = function () {\n    this.hidePopup();\n    this.unWireEvent();\n    if (this.list) {\n      this.unWireListEvents();\n    }\n    if (this.inputElement && !this.inputElement.classList.contains('e-' + this.getModuleName())) {\n      return;\n    }\n    _super.prototype.destroy.call(this);\n  };\n  Mention.prototype.getLocaleName = function () {\n    return 'mention';\n  };\n  Mention.prototype.getNgDirective = function () {\n    return 'EJS-MENTION';\n  };\n  /**\n   * Return the module name of this component.\n   *\n   * @private\n   * @returns {string} Return the module name of this component.\n   */\n  Mention.prototype.getModuleName = function () {\n    return 'mention';\n  };\n  __decorate([Property(null)], Mention.prototype, \"cssClass\", void 0);\n  __decorate([Property('@')], Mention.prototype, \"mentionChar\", void 0);\n  __decorate([Property(false)], Mention.prototype, \"showMentionChar\", void 0);\n  __decorate([Property(false)], Mention.prototype, \"allowSpaces\", void 0);\n  __decorate([Property(null)], Mention.prototype, \"suffixText\", void 0);\n  __decorate([Property(25)], Mention.prototype, \"suggestionCount\", void 0);\n  __decorate([Property(0)], Mention.prototype, \"minLength\", void 0);\n  __decorate([Property('None')], Mention.prototype, \"sortOrder\", void 0);\n  __decorate([Property(true)], Mention.prototype, \"ignoreCase\", void 0);\n  __decorate([Property(false)], Mention.prototype, \"highlight\", void 0);\n  __decorate([Property()], Mention.prototype, \"locale\", void 0);\n  __decorate([Property('auto')], Mention.prototype, \"popupWidth\", void 0);\n  __decorate([Property('300px')], Mention.prototype, \"popupHeight\", void 0);\n  __decorate([Property(null)], Mention.prototype, \"displayTemplate\", void 0);\n  __decorate([Property(null)], Mention.prototype, \"itemTemplate\", void 0);\n  __decorate([Property('No records found')], Mention.prototype, \"noRecordsTemplate\", void 0);\n  __decorate([Property(null)], Mention.prototype, \"spinnerTemplate\", void 0);\n  __decorate([Property()], Mention.prototype, \"target\", void 0);\n  __decorate([Property([])], Mention.prototype, \"dataSource\", void 0);\n  __decorate([Property(null)], Mention.prototype, \"query\", void 0);\n  __decorate([Property('Contains')], Mention.prototype, \"filterType\", void 0);\n  __decorate([Complex({\n    text: null,\n    value: null,\n    iconCss: null,\n    groupBy: null\n  }, FieldSettings)], Mention.prototype, \"fields\", void 0);\n  __decorate([Event()], Mention.prototype, \"actionBegin\", void 0);\n  __decorate([Event()], Mention.prototype, \"actionComplete\", void 0);\n  __decorate([Event()], Mention.prototype, \"actionFailure\", void 0);\n  __decorate([Event()], Mention.prototype, \"change\", void 0);\n  __decorate([Event()], Mention.prototype, \"beforeOpen\", void 0);\n  __decorate([Event()], Mention.prototype, \"opened\", void 0);\n  __decorate([Event()], Mention.prototype, \"closed\", void 0);\n  __decorate([Event()], Mention.prototype, \"select\", void 0);\n  __decorate([Event()], Mention.prototype, \"filtering\", void 0);\n  __decorate([Event()], Mention.prototype, \"created\", void 0);\n  __decorate([Event()], Mention.prototype, \"destroyed\", void 0);\n  Mention = __decorate([NotifyPropertyChanges], Mention);\n  return Mention;\n}(DropDownBase);\nexport { Mention };","map":null,"metadata":{},"sourceType":"module"}